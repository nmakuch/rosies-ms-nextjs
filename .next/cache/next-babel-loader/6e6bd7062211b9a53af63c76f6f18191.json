{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n            padding-top: 100px !important;\\n            padding-bottom: 100px !important;\\n            h2 {\\n              text-transform: uppercase;\\n              font-weight: 600;\\n            }\\n\\n            h2:first-of-type {\\n              margin-bottom: 25px;\\n            }\\n\\n            h2:last-of-type {\\n              margin-bottom: 25px;\\n            }\\n          \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// this comment tells babel to convert jsx to calls to a function called jsx instead of React.createElement\n\n/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport GlobalHeader from \"../components/GlobalHeader\";\nimport CallToAction from \"../components/CallToAction\";\nimport Checkbox from \"../components/CheckBox\";\n\nvar CheckBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CheckBox, _React$Component);\n\n  function CheckBox() {\n    _classCallCheck(this, CheckBox);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CheckBox).apply(this, arguments));\n  }\n\n  _createClass(CheckBox, [{\n    key: \"render\",\n    value: function render() {\n      return jsx(React.Fragment, null, jsx(\"label\", null, this.props.label), jsx(\"input\", {\n        type: \"checkbox\",\n        id: this.props.id,\n        value: this.props.value,\n        onChange: this.props.onChange\n      }));\n    }\n  }]);\n\n  return CheckBox;\n}(React.Component);\n\nvar Services =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Services, _React$Component2);\n\n  function Services(props) {\n    var _this;\n\n    _classCallCheck(this, Services);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Services).call(this, props));\n    _this.state = {\n      optionsAddOns1: [0]\n    };\n    return _this;\n  }\n\n  _createClass(Services, [{\n    key: \"changeEvent\",\n    value: function changeEvent(event) {\n      var checkedArrayAddOns1 = this.state.optionsAddOns1;\n      var selectedValue = event.target.value;\n\n      if (event.target.checked === true) {\n        checkedArrayAddOns1.push(_parseInt(selectedValue));\n        this.setState({\n          optionsAddOns1: checkedArrayAddOns1\n        });\n      } else {\n        var valueIndex = checkedArrayAddOns1.indexOf(selectedValue);\n        checkedArrayAddOns1.splice(valueIndex, 1);\n        this.setState({\n          optionsAddOns1: checkedArrayAddOns1\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var checkBoxArrayAddOns1 = [1, 2, 3];\n      var checkBoxArrayLabelsAddOns1 = [\"Label1:\", \"Label2:\", \"Label3:\"];\n      var outputCheckboxLabelsAddOns1 = checkBoxArrayLabelsAddOns1.map();\n      var outputCheckboxesAddOns1 = checkBoxArrayAddOns1.map(function (number, i) {\n        return jsx(\"div\", null, jsx(CheckBox, {\n          value: 1,\n          id: \"string_\" + i,\n          onChange: _this2.changeEvent.bind(_this2)\n        }), jsx(\"label\", {\n          htmlFor: \"string_\" + i\n        }, label, \" \", number));\n      }, this);\n      var sum = this.state.optionsAddOns1.reduce(function (a, b) {\n        return a + b;\n      }, 0);\n      return jsx(Layout, null, jsx(GlobalHeader, {\n        globalHeaderTitle: \"Services / Booking\",\n        globalHeaderSubTitle: \"View a list of our services or book an appointment\",\n        globalHeaderImage: \"../img/services-bg.jpg\"\n      }), jsx(\"section\", {\n        css: css(_templateObject()),\n        id: \"contact-form\"\n      }, jsx(\"div\", {\n        className: \"container\"\n      }, jsx(\"div\", {\n        className: \"row\"\n      }, jsx(\"div\", null, jsx(\"div\", null, outputCheckboxesAddOns1), jsx(\"div\", null, _JSON$stringify(this.state.optionsAddOns1)), jsx(\"div\", null, sum))))), jsx(CallToAction, {\n        callTitle: \"You're one step away from a clean and happy home!\",\n        callText: \"If you'd like to know more about the services we offer, please view our Services page by clicking the button below.\",\n        callLinkUrl: \"/services\",\n        callLink: \"View our services\",\n        callImage: \"img/services-bg.jpg\"\n      }));\n    }\n  }]);\n\n  return Services;\n}(React.Component);\n\nexport default Services;","map":{"version":3,"sources":["/Users/nickmakuch/Documents/Code/rosies-ms-nextjs/pages/services.js"],"names":["jsx","css","Link","Layout","GlobalHeader","CallToAction","Checkbox","CheckBox","props","label","id","value","onChange","React","Component","Services","state","optionsAddOns1","event","checkedArrayAddOns1","selectedValue","target","checked","push","setState","valueIndex","indexOf","splice","checkBoxArrayAddOns1","checkBoxArrayLabelsAddOns1","outputCheckboxLabelsAddOns1","map","outputCheckboxesAddOns1","number","i","changeEvent","bind","sum","reduce","a","b"],"mappings":"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","sourcesContent":["// this comment tells babel to convert jsx to calls to a function called jsx instead of React.createElement\n/** @jsx jsx */\n\nimport { jsx, css } from \"@emotion/core\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport GlobalHeader from \"../components/GlobalHeader\";\nimport CallToAction from \"../components/CallToAction\";\nimport Checkbox from \"../components/CheckBox\";\n\nclass CheckBox extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <label>{this.props.label}</label>\n        <input\n          type=\"checkbox\"\n          id={this.props.id}\n          value={this.props.value}\n          onChange={this.props.onChange}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nclass Services extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { optionsAddOns1: [0] };\n  }\n\n  changeEvent(event) {\n    let checkedArrayAddOns1 = this.state.optionsAddOns1;\n    let selectedValue = event.target.value;\n\n    if (event.target.checked === true) {\n      checkedArrayAddOns1.push(parseInt(selectedValue));\n      this.setState({\n        optionsAddOns1: checkedArrayAddOns1\n      });\n    } else {\n      let valueIndex = checkedArrayAddOns1.indexOf(selectedValue);\n      checkedArrayAddOns1.splice(valueIndex, 1);\n\n      this.setState({\n        optionsAddOns1: checkedArrayAddOns1\n      });\n    }\n  }\n  render() {\n    let checkBoxArrayAddOns1 = [1, 2, 3];\n    let checkBoxArrayLabelsAddOns1 = [\"Label1:\", \"Label2:\", \"Label3:\"]\n\n    let outputCheckboxLabelsAddOns1 = checkBoxArrayLabelsAddOns1.map();\n\n    let outputCheckboxesAddOns1 = checkBoxArrayAddOns1.map((number, i) => {\n      return (\n        <div>\n          <CheckBox\n            value={1}\n            id={\"string_\" + i}\n            onChange={this.changeEvent.bind(this)}\n          />\n          <label htmlFor={\"string_\" + i}>{label} {number}</label>\n        </div>\n      );\n    }, this);\n\n    let sum = this.state.optionsAddOns1.reduce((a, b) => a + b, 0);\n\n    return (\n      <Layout>\n        <GlobalHeader\n          globalHeaderTitle=\"Services / Booking\"\n          globalHeaderSubTitle=\"View a list of our services or book an appointment\"\n          globalHeaderImage=\"../img/services-bg.jpg\"\n        />\n        <section\n          css={css`\n            padding-top: 100px !important;\n            padding-bottom: 100px !important;\n            h2 {\n              text-transform: uppercase;\n              font-weight: 600;\n            }\n\n            h2:first-of-type {\n              margin-bottom: 25px;\n            }\n\n            h2:last-of-type {\n              margin-bottom: 25px;\n            }\n          `}\n          id=\"contact-form\"\n        >\n          <div className=\"container\">\n            <div className=\"row\">\n              <div>\n                <div>{outputCheckboxesAddOns1}</div>\n                <div>{JSON.stringify(this.state.optionsAddOns1)}</div>\n                <div>{sum}</div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <CallToAction\n          callTitle=\"You're one step away from a clean and happy home!\"\n          callText=\"If you'd like to know more about the services we offer, please view our Services page by clicking the button below.\"\n          callLinkUrl=\"/services\"\n          callLink=\"View our services\"\n          callImage=\"img/services-bg.jpg\"\n        />\n      </Layout>\n    );\n  }\n}\n\nexport default Services;\n"]},"metadata":{},"sourceType":"module"}