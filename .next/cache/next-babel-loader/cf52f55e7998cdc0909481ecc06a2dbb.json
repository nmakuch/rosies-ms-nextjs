{"ast":null,"code":"import _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// this comment tells babel to convert jsx to calls to a function called jsx instead of React.createElement\n\n/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { theme } from \"../styles/styles\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport GlobalHeader from \"../components/GlobalHeader\";\nimport CallToAction from \"../components/CallToAction\";\nconst formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2\n});\n\nclass CheckBox extends React.Component {\n  render() {\n    return jsx(React.Fragment, null, jsx(\"label\", {\n      className: \"checkbox-label\"\n    }, jsx(\"input\", {\n      type: \"checkbox\",\n      id: this.props.id,\n      value: this.props.value,\n      onChange: this.props.onChange\n    }), jsx(\"p\", {\n      className: \"radio-label\"\n    }, this.props.label), jsx(\"span\", {\n      className: \"checkbox-custom rectangular\"\n    })));\n  }\n\n}\n\nclass Services extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      optionsAddOns3: [],\n      labelsAddOns3: [],\n      selectBoxValue1: [],\n      radio1: \"\",\n      radioLabel: 0.0\n    };\n  }\n\n  radioChange(event) {\n    this.setState({\n      radio1: event.target.value,\n      radioLabel: event.target.id\n    });\n  }\n\n  changeEvent3(event) {\n    let checkedArrayAddOns3 = this.state.optionsAddOns3;\n    let checkedArrayIds3 = this.state.labelsAddOns3;\n    let selectedId3 = event.target.id;\n    let selectedValue3 = event.target.value;\n\n    if (event.target.checked === true) {\n      checkedArrayIds3.push(selectedId3);\n      checkedArrayAddOns3.push(_parseFloat(selectedValue3));\n      this.setState({\n        optionsAddOns3: checkedArrayAddOns3,\n        labelsAddOns3: checkedArrayIds3\n      });\n    } else {\n      let valueIndex3 = checkedArrayAddOns3.indexOf(selectedValue3);\n      checkedArrayAddOns3.splice(valueIndex3, 1);\n      checkedArrayIds3.splice(valueIndex3, 1);\n      this.setState({\n        optionsAddOns3: checkedArrayAddOns3,\n        labelsAddOns3: checkedArrayIds3\n      });\n    }\n  }\n\n  render() {\n    let addOnsLabels3 = this.state.labelsAddOns3;\n    let addOnsCost3 = this.state.optionsAddOns3;\n    let checkBoxArrayAddOns3 = [35.0, 20.0, 20.0, 20.0, 15.0, 20.0];\n    let checkBoxArrayLabels3 = [\"Deep clean - wall spot cleaning, baseboards, inside of kitchen & bathroom cabinets ($35.00)\", \"Big task - oven ($20.00)\", \"Big task - inside fridge ($20.00)\", \"Big task - windows ($20.00)\", \"Additional powder room ($15.00)\", \"Additional bathroom ($20.00)\"];\n    let checkBoxArrayIds3 = [\"Deep Clean - Wall, baseboards, kitchen...\", \"Big task - Oven\", \"Big task - Inside fridge\", \"Big task - Windows\", \"Additional powder room\", \"Additional bathroom\"];\n    let radioValues1 = [52.5, 70.0, 87.5, 105.0, 122.5, 140.0];\n    let radioLabels1 = [\"1.5 hour session at $35/hour ($52.50)\", \"2.0 hour session at $35/hour ($70.00)\", \"2.5 hour session at $35/hour ($87.50)\", \"3.0 hour session at $35/hour ($105.00)\", \"3.5 hour session at $35/hour ($122.50)\", \"4.0 hour session at $35/hour ($140.00)\"];\n    let radioArrayId1 = [\"1.5 hour session at $35/hour\", \"2.0 hour session at $35/hour\", \"2.5 hour session at $35/hour\", \"3.0 hour session at $35/hour\", \"3.5 hour session at $35/hour\", \"4.0 hour session at $35/hour\"];\n    let radioValues2 = [54.0, 90.0, 108.0];\n    let radioLabels2 = [\"Basic (1.5 hours): kitchen, bathroom, all floors  ($54.00)\", \"Basic Plus (2.5 hours): kitchen, bathroom, living areas including bedroom ($90.00)\", \"Complete (3.0 hours): kitchen, bathroom, living areas plus one big job ($108.00)\"];\n    let radioArrayId2 = [\"Basic (1.5 hours)\", \"Basic plus (2.5 hours)\", \"Complete (3.0 hours)\"];\n    let radioValues3 = [60.0, 100.0, 140.0];\n    let radioLabels3 = [\"Basic (1.5 hours): kitchen, bathroom, all floors  ($54.00)\", \"Basic Plus (2.5 hours): kitchen, bathroom, living areas including bedroom ($90.00)\", \"Complete (3.0 hours): kitchen, bathroom, living areas plus one big job ($108.00)\"];\n    let radioArrayId3 = [\"x2 Basic (1.5 hours)\", \"x2 Basic plus (2.5 hours)\", \"x2 Complete (3.0 hours)\"];\n    let grandTotalArr = [];\n    let outputCheckboxesAddOns3 = checkBoxArrayAddOns3.map((number, i) => {\n      return jsx(CheckBox, {\n        value: number,\n        id: checkBoxArrayIds3[i],\n        onChange: this.changeEvent3.bind(this),\n        label: checkBoxArrayLabels3[i]\n      });\n    }, this);\n    let sumOptionsAddOns3 = this.state.optionsAddOns3.reduce((a, b) => a + b, 0);\n    grandTotalArr.push(sumOptionsAddOns3);\n    let reducedArr = grandTotalArr.reduce((a, b) => a + b, 0);\n    let grandTotalHST = formatter.format(reducedArr * 0.13 + this.state.radio1 * 0.13);\n    let grandTotalSumHST = formatter.format(reducedArr * 1.13 + this.state.radio1 * 1.13);\n    return jsx(Layout, null, jsx(GlobalHeader, {\n      globalHeaderTitle: \"Services and Booking\",\n      globalHeaderSubTitle: \"View a list of our services or book an appointment\",\n      globalHeaderImage: \"../img/services-bg.jpg\"\n    }), jsx(\"section\", {\n      css: css`\n            margin-top: 75px;\n\n            p {\n              margin-bottom: 0;\n            }\n\n            h2 {\n              font-weight: 600;\n              margin-bottom: 25px;\n            }\n          `\n    }, jsx(\"div\", {\n      className: \"container\"\n    }, jsx(\"div\", {\n      className: \"col-md-8 offset-md-2 col-sm-12\"\n    }, jsx(\"div\", {\n      css: css`\n                  padding: 0 15px;\n                `,\n      className: \"row\"\n    }, jsx(\"h2\", null, \"We offer a variety of cleaning options\"), jsx(\"p\", null, \"We offer the most customizable plans that let you choose exactly what you want. Whether you want your entire home deep cleaned by one of our professional staff, or simply want some help with the dreaded kitchen & bathroom, we have you covered. Choose from our pre-structured plans that cover all the standard items, or select our hourly plan to have complete control of how the time is spent.\"))))), jsx(\"section\", {\n      css: css`\n            padding-top: 75px !important;\n            padding-bottom: 100px !important;\n            h2 {\n              font-weight: 600;\n              margin-bottom: 50px;\n            }\n\n            h3 {\n              font-size: 20px;\n              font-weight: 600;\n              margin-bottom: 35px;\n            }\n\n            h4 {\n              font-size: 18px;\n              font-weight: 600;\n              margin-bottom: 25px;\n            }\n\n            li {\n              label {\n                margin-bottom: 45px;\n\n                p {\n                  position: relative;\n                  top: 5px;\n                  left: 50px;\n                }\n\n                @media only screen and (max-width: 767px) {\n                  p {\n                    line-height: 1.2rem;\n                  }\n                }\n              }\n            }\n\n            li:first-of-type {\n              margin-top: 25px;\n            }\n\n            li:nth-of-type(6) {\n              margin-bottom: 50px;\n            }\n\n            textarea {\n              margin-bottom: 50px;\n            }\n\n            li:last-of-type {\n              margin-bottom: 50px;\n            }\n\n            .form-group {\n              padding: 0px !important;\n            }\n          `,\n      id: \"service-form\"\n    }, jsx(\"div\", {\n      className: \"block\"\n    }, jsx(\"form\", {\n      method: \"post\"\n    }, jsx(\"div\", {\n      className: \"container\"\n    }, jsx(\"div\", {\n      className: \"col-md-8 offset-md-2 col-sm-12\"\n    }, jsx(\"div\", {\n      css: css`\n                      padding: 0 15px;\n                    `,\n      className: \"row\"\n    }, jsx(\"div\", {\n      css: css`\n                        padding: 0 5px !important;\n                      `,\n      className: \"col-md-12 col-sm-12\"\n    }, jsx(\"div\", {\n      className: \"form-group\"\n    }, jsx(\"h2\", null, \"1) Hourly cleaning packages\"), jsx(\"h3\", null, \"Our regular cleaning rate is $35/hour\"), jsx(\"ul\", null, radioValues1.map((radioValue, i) => {\n      return jsx(\"li\", null, jsx(\"label\", {\n        className: \"checkbox-label\"\n      }, jsx(\"input\", {\n        type: \"radio\",\n        value: radioValue,\n        id: radioArrayId1[i],\n        checked: this.state.radio1 === `${radioValue}`,\n        onChange: this.radioChange.bind(this)\n      }), jsx(\"p\", {\n        className: \"radio-label\"\n      }, radioLabels1[i]), jsx(\"span\", {\n        className: \"checkbox-custom circular\"\n      })));\n    }), jsx(\"li\", null, jsx(\"div\", {\n      className: \"form-group-2\"\n    }, jsx(\"h4\", null, \"Please leave instructions for your cleaner:\"), jsx(\"textarea\", {\n      name: \"hourlyMessage\",\n      id: \"hourlyMessage\",\n      className: \"form-control\",\n      rows: \"3\",\n      css: css`\n                                  height: 135px !important;\n                                `,\n      placeholder: \"Your message\"\n    }))), jsx(\"li\", null, jsx(\"h2\", null, \"2) Pre-structured cleaning package (Rate: $35/hour)\")), jsx(\"li\", null, jsx(\"h3\", null, \"1 Bedroom or Bachelor up to 600 sq/ft (1 bathroom)\")), radioValues2.map((radioValue, i) => {\n      return jsx(\"li\", null, jsx(\"label\", {\n        className: \"checkbox-label\"\n      }, jsx(\"input\", {\n        type: \"radio\",\n        value: radioValue,\n        id: radioArrayId2[i],\n        checked: this.state.radio1 === `${radioValue}`,\n        onChange: this.radioChange.bind(this)\n      }), jsx(\"p\", {\n        className: \"radio-label\"\n      }, radioLabels2[i]), jsx(\"span\", {\n        className: \"checkbox-custom circular\"\n      })));\n    }))))), jsx(\"div\", {\n      css: css`\n                      padding: 0 15px;\n                      label {\n                        margin-bottom: 50px;\n                        p {\n                          position: relative;\n                          top: 4px;\n                          left: 50px;\n                        }\n\n                        @media only screen and (max-width: 767px) {\n                          p {\n                            line-height: 1.2rem;\n                            top: 8px;\n                          }\n                        }\n                      }\n                    `,\n      className: \"row\"\n    }, jsx(\"h2\", {\n      css: css`\n                        margin-bottom: 0 !important;\n                        margin-top: 50px;\n                      `\n    }, \"Add ons:\")), jsx(\"div\", {\n      css: css`\n                      padding: 0 15px;\n                      label {\n                        margin-bottom: 40px;\n                        p {\n                          position: relative;\n                          top: 4px;\n                          left: 50px;\n                        }\n\n                        @media only screen and (max-width: 767px) {\n                          p {\n                            line-height: 1.2rem;\n                            top: 8px;\n                          }\n                        }\n                      }\n                    `,\n      className: \"row\"\n    }, jsx(\"h3\", {\n      css: css`\n                        margin-top: 50px;\n                      `\n    }, \"These add-ons can be added to your package:\"), jsx(\"div\", {\n      className: \"form-group\"\n    }, jsx(\"div\", null, outputCheckboxesAddOns3), jsx(\"br\", null))), jsx(\"div\", {\n      css: css`\n                      padding: 0 15px;\n                    `,\n      className: \"row\"\n    }, grandTotalHST !== \"$0.00\" ? jsx(\"div\", null, jsx(\"h2\", {\n      css: css`\n                            margin-bottom: 30px !important;\n                          `\n    }, \"Your plan:\"), this.state.radio1 > 0 ? jsx(\"div\", {\n      css: css`\n                              display: flex;\n                              justify-content: space-between;\n                              width: 400px;\n                              padding: 0 5px 0 0;\n\n                              input {\n                                font-family: \"Roboto\", sans-serif;\n                                font-size: 16px;\n                                font-weight: 600;\n                                margin-bottom: 15px;\n                                border: none;\n                                overflow: visible;\n                                width: auto;\n                              }\n\n                              @media only screen and (max-width: 500px) {\n                                width: 330px;\n\n                                input {\n                                  width: auto;\n                                }\n                              }\n\n                              @media only screen and (max-width: 390px) {\n                                width: 275px;\n                              }\n                            `\n    }, jsx(\"input\", {\n      type: \"text\",\n      name: \"planType\",\n      id: \"planType\",\n      value: `+ ${this.state.radioLabel}`\n    }), jsx(\"span\", null, formatter.format(this.state.radio1))) : null, addOnsLabels3.map((addOnLabel3, i) => {\n      return jsx(\"div\", {\n        css: css`\n                                display: flex;\n                                justify-content: space-between;\n                                width: 400px;\n\n                                h3 {\n                                  font-size: 16px;\n                                  margin-bottom: 15px;\n                                }\n\n                                span {\n                                  font-size: 16px;\n                                }\n\n                                @media only screen and (max-width: 500px) {\n                                  width: 325px;\n                                }\n\n                                @media only screen and (max-width: 390px) {\n                                  width: 270px;\n                                }\n                              `\n      }, jsx(\"h3\", null, \"+ \", addOnLabel3), jsx(\"span\", null, \" \", formatter.format(addOnsCost3[i])));\n    })) : null), grandTotalHST !== \"$0.00\" ? jsx(React.Fragment, null, jsx(\"div\", {\n      css: css`\n                          padding: 0 15px;\n                        `,\n      className: \"row\"\n    }, jsx(\"div\", {\n      css: css`\n                            display: flex;\n                            justify-content: space-between;\n                            width: 400px;\n                            margin-top: 25px;\n                            padding-top: 25px;\n                            border-top: 1px solid black;\n\n                            h3 {\n                              font-size: 16px;\n                              margin-bottom: 15px;\n                            }\n\n                            span {\n                              font-size: 16px;\n                            }\n\n                            @media only screen and (max-width: 500px) {\n                              width: 325px;\n                            }\n\n                            @media only screen and (max-width: 390px) {\n                              width: 270px;\n                            }\n                          `\n    }, jsx(\"h3\", null, \"+ HST (x0.13)\"), jsx(\"span\", null, grandTotalHST))), jsx(\"div\", {\n      css: css`\n                          padding: 0 15px;\n                        `,\n      className: \"row\"\n    }, jsx(\"div\", {\n      css: css`\n                            display: flex;\n                            justify-content: space-between;\n                            width: 400px;\n\n                            h3 {\n                              font-size: 16px;\n                              margin-top: 7px;\n                              margin-bottom: 75px;\n                            }\n\n                            input {\n                              font-size: 16px;\n                              width: auto;\n                              overflow: visible;\n                              height: 35px;\n                              text-align: right;\n                              border: none;\n                              margin-bottom: 75px;\n                            }\n\n                            @media only screen and (max-width: 500px) {\n                              width: 330px;\n                            }\n\n                            @media only screen and (max-width: 390px) {\n                              width: 270px;\n                            }\n                          `\n    }, jsx(\"h3\", null, \"Grand total:\"), jsx(\"input\", {\n      type: \"text\",\n      name: \"grandTotal\",\n      id: \"grandTotal\",\n      value: grandTotalSumHST\n    })))) : null, jsx(\"button\", {\n      className: \"btn btn-default\",\n      type: \"submit\"\n    }, \"submit\")))))), jsx(CallToAction, {\n      callTitle: \"You're one step away from a clean and happy home!\",\n      callText: \"If you'd like to know more about the services we offer, please view our Services page by clicking the button below.\",\n      callLinkUrl: \"/services\",\n      callLink: \"View our services\",\n      callImage: \"img/services-bg.jpg\"\n    }));\n  }\n\n}\n\nexport default Services;","map":{"version":3,"sources":["/Users/nickmakuch/Documents/Code/rosies-ms-nextjs/pages/services.js"],"names":["jsx","css","theme","Link","Layout","GlobalHeader","CallToAction","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","CheckBox","React","Component","render","props","id","value","onChange","label","Services","constructor","state","optionsAddOns3","labelsAddOns3","selectBoxValue1","radio1","radioLabel","radioChange","event","setState","target","changeEvent3","checkedArrayAddOns3","checkedArrayIds3","selectedId3","selectedValue3","checked","push","valueIndex3","indexOf","splice","addOnsLabels3","addOnsCost3","checkBoxArrayAddOns3","checkBoxArrayLabels3","checkBoxArrayIds3","radioValues1","radioLabels1","radioArrayId1","radioValues2","radioLabels2","radioArrayId2","radioValues3","radioLabels3","radioArrayId3","grandTotalArr","outputCheckboxesAddOns3","map","number","i","bind","sumOptionsAddOns3","reduce","a","b","reducedArr","grandTotalHST","format","grandTotalSumHST","radioValue","addOnLabel3"],"mappings":"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","sourcesContent":["// this comment tells babel to convert jsx to calls to a function called jsx instead of React.createElement\n/** @jsx jsx */\n\nimport { jsx, css } from \"@emotion/core\";\nimport { theme } from \"../styles/styles\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport GlobalHeader from \"../components/GlobalHeader\";\nimport CallToAction from \"../components/CallToAction\";\n\nconst formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2\n});\n\nclass CheckBox extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <label className=\"checkbox-label\">\n          <input\n            type=\"checkbox\"\n            id={this.props.id}\n            value={this.props.value}\n            onChange={this.props.onChange}\n          />\n          <p className=\"radio-label\">{this.props.label}</p>\n          <span className=\"checkbox-custom rectangular\"></span>\n        </label>\n      </React.Fragment>\n    );\n  }\n}\n\nclass Services extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      optionsAddOns3: [],\n      labelsAddOns3: [],\n      selectBoxValue1: [],\n      radio1: \"\",\n      radioLabel: 0.0\n    };\n  }\n\n  radioChange(event) {\n    this.setState({\n      radio1: event.target.value,\n      radioLabel: event.target.id\n    });\n  }\n\n  changeEvent3(event) {\n    let checkedArrayAddOns3 = this.state.optionsAddOns3;\n    let checkedArrayIds3 = this.state.labelsAddOns3;\n    let selectedId3 = event.target.id;\n    let selectedValue3 = event.target.value;\n\n    if (event.target.checked === true) {\n      checkedArrayIds3.push(selectedId3);\n      checkedArrayAddOns3.push(parseFloat(selectedValue3));\n      this.setState({\n        optionsAddOns3: checkedArrayAddOns3,\n        labelsAddOns3: checkedArrayIds3\n      });\n    } else {\n      let valueIndex3 = checkedArrayAddOns3.indexOf(selectedValue3);\n      checkedArrayAddOns3.splice(valueIndex3, 1);\n      checkedArrayIds3.splice(valueIndex3, 1);\n\n      this.setState({\n        optionsAddOns3: checkedArrayAddOns3,\n        labelsAddOns3: checkedArrayIds3\n      });\n    }\n  }\n\n  render() {\n    let addOnsLabels3 = this.state.labelsAddOns3;\n    let addOnsCost3 = this.state.optionsAddOns3;\n\n    let checkBoxArrayAddOns3 = [35.0, 20.0, 20.0, 20.0, 15.0, 20.0];\n    let checkBoxArrayLabels3 = [\n      \"Deep clean - wall spot cleaning, baseboards, inside of kitchen & bathroom cabinets ($35.00)\",\n      \"Big task - oven ($20.00)\",\n      \"Big task - inside fridge ($20.00)\",\n      \"Big task - windows ($20.00)\",\n      \"Additional powder room ($15.00)\",\n      \"Additional bathroom ($20.00)\"\n    ];\n\n    let checkBoxArrayIds3 = [\n      \"Deep Clean - Wall, baseboards, kitchen...\",\n      \"Big task - Oven\",\n      \"Big task - Inside fridge\",\n      \"Big task - Windows\",\n      \"Additional powder room\",\n      \"Additional bathroom\"\n    ];\n\n    let radioValues1 = [52.5, 70.0, 87.5, 105.0, 122.5, 140.0];\n    let radioLabels1 = [\n      \"1.5 hour session at $35/hour ($52.50)\",\n      \"2.0 hour session at $35/hour ($70.00)\",\n      \"2.5 hour session at $35/hour ($87.50)\",\n      \"3.0 hour session at $35/hour ($105.00)\",\n      \"3.5 hour session at $35/hour ($122.50)\",\n      \"4.0 hour session at $35/hour ($140.00)\"\n    ];\n\n    let radioArrayId1 = [\n      \"1.5 hour session at $35/hour\",\n      \"2.0 hour session at $35/hour\",\n      \"2.5 hour session at $35/hour\",\n      \"3.0 hour session at $35/hour\",\n      \"3.5 hour session at $35/hour\",\n      \"4.0 hour session at $35/hour\"\n    ];\n\n    let radioValues2 = [54.0, 90.0, 108.0];\n    let radioLabels2 = [\n      \"Basic (1.5 hours): kitchen, bathroom, all floors  ($54.00)\",\n      \"Basic Plus (2.5 hours): kitchen, bathroom, living areas including bedroom ($90.00)\",\n      \"Complete (3.0 hours): kitchen, bathroom, living areas plus one big job ($108.00)\"\n    ];\n\n    let radioArrayId2 = [\n      \"Basic (1.5 hours)\",\n      \"Basic plus (2.5 hours)\",\n      \"Complete (3.0 hours)\"\n    ];\n\n    let radioValues3 = [60.0, 100.0, 140.0];\n    let radioLabels3 = [\n      \"Basic (1.5 hours): kitchen, bathroom, all floors  ($54.00)\",\n      \"Basic Plus (2.5 hours): kitchen, bathroom, living areas including bedroom ($90.00)\",\n      \"Complete (3.0 hours): kitchen, bathroom, living areas plus one big job ($108.00)\"\n    ];\n\n    let radioArrayId3 = [\n      \"x2 Basic (1.5 hours)\",\n      \"x2 Basic plus (2.5 hours)\",\n      \"x2 Complete (3.0 hours)\"\n    ];\n\n    let grandTotalArr = [];\n\n    let outputCheckboxesAddOns3 = checkBoxArrayAddOns3.map((number, i) => {\n      return (\n        <CheckBox\n          value={number}\n          id={checkBoxArrayIds3[i]}\n          onChange={this.changeEvent3.bind(this)}\n          label={checkBoxArrayLabels3[i]}\n        />\n      );\n    }, this);\n\n    let sumOptionsAddOns3 = this.state.optionsAddOns3.reduce(\n      (a, b) => a + b,\n      0\n    );\n\n    grandTotalArr.push(sumOptionsAddOns3);\n\n    let reducedArr = grandTotalArr.reduce((a, b) => a + b, 0);\n\n    let grandTotalHST = formatter.format(\n      reducedArr * 0.13 + this.state.radio1 * 0.13\n    );\n\n    let grandTotalSumHST = formatter.format(\n      reducedArr * 1.13 + this.state.radio1 * 1.13\n    );\n\n    return (\n      <Layout>\n        <GlobalHeader\n          globalHeaderTitle=\"Services and Booking\"\n          globalHeaderSubTitle=\"View a list of our services or book an appointment\"\n          globalHeaderImage=\"../img/services-bg.jpg\"\n        />\n        <section\n          css={css`\n            margin-top: 75px;\n\n            p {\n              margin-bottom: 0;\n            }\n\n            h2 {\n              font-weight: 600;\n              margin-bottom: 25px;\n            }\n          `}\n        >\n          <div className=\"container\">\n            <div className=\"col-md-8 offset-md-2 col-sm-12\">\n              <div\n                css={css`\n                  padding: 0 15px;\n                `}\n                className=\"row\"\n              >\n                <h2>We offer a variety of cleaning options</h2>\n                <p>\n                  We offer the most customizable plans that let you choose\n                  exactly what you want. Whether you want your entire home deep\n                  cleaned by one of our professional staff, or simply want some\n                  help with the dreaded kitchen & bathroom, we have you covered.\n                  Choose from our pre-structured plans that cover all the\n                  standard items, or select our hourly plan to have complete\n                  control of how the time is spent.\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section\n          css={css`\n            padding-top: 75px !important;\n            padding-bottom: 100px !important;\n            h2 {\n              font-weight: 600;\n              margin-bottom: 50px;\n            }\n\n            h3 {\n              font-size: 20px;\n              font-weight: 600;\n              margin-bottom: 35px;\n            }\n\n            h4 {\n              font-size: 18px;\n              font-weight: 600;\n              margin-bottom: 25px;\n            }\n\n            li {\n              label {\n                margin-bottom: 45px;\n\n                p {\n                  position: relative;\n                  top: 5px;\n                  left: 50px;\n                }\n\n                @media only screen and (max-width: 767px) {\n                  p {\n                    line-height: 1.2rem;\n                  }\n                }\n              }\n            }\n\n            li:first-of-type {\n              margin-top: 25px;\n            }\n\n            li:nth-of-type(6) {\n              margin-bottom: 50px;\n            }\n\n            textarea {\n              margin-bottom: 50px;\n            }\n\n            li:last-of-type {\n              margin-bottom: 50px;\n            }\n\n            .form-group {\n              padding: 0px !important;\n            }\n          `}\n          id=\"service-form\"\n        >\n          <div className=\"block\">\n            <form method=\"post\">\n              <div className=\"container\">\n                <div className=\"col-md-8 offset-md-2 col-sm-12\">\n                  <div\n                    css={css`\n                      padding: 0 15px;\n                    `}\n                    className=\"row\"\n                  >\n                    <div\n                      css={css`\n                        padding: 0 5px !important;\n                      `}\n                      className=\"col-md-12 col-sm-12\"\n                    >\n                      <div className=\"form-group\">\n                        <h2>1) Hourly cleaning packages</h2>\n                        <h3>Our regular cleaning rate is $35/hour</h3>\n                        <ul>\n                          {radioValues1.map((radioValue, i) => {\n                            return (\n                              <li>\n                                <label className=\"checkbox-label\">\n                                  <input\n                                    type=\"radio\"\n                                    value={radioValue}\n                                    id={radioArrayId1[i]}\n                                    checked={\n                                      this.state.radio1 === `${radioValue}`\n                                    }\n                                    onChange={this.radioChange.bind(this)}\n                                  />\n                                  <p className=\"radio-label\">\n                                    {radioLabels1[i]}\n                                  </p>\n                                  <span className=\"checkbox-custom circular\"></span>\n                                </label>\n                              </li>\n                            );\n                          })}\n                          <li>\n                            <div className=\"form-group-2\">\n                              <h4>\n                                Please leave instructions for your cleaner:\n                              </h4>\n                              <textarea\n                                name=\"hourlyMessage\"\n                                id=\"hourlyMessage\"\n                                className=\"form-control\"\n                                rows=\"3\"\n                                css={css`\n                                  height: 135px !important;\n                                `}\n                                placeholder=\"Your message\"\n                              ></textarea>\n                            </div>\n                          </li>\n                          <li>\n                            <h2>\n                              2) Pre-structured cleaning package (Rate:\n                              $35/hour)\n                            </h2>\n                          </li>\n                          <li>\n                            <h3>\n                              1 Bedroom or Bachelor up to 600 sq/ft (1 bathroom)\n                            </h3>\n                          </li>\n                          {radioValues2.map((radioValue, i) => {\n                            return (\n                              <li>\n                                <label className=\"checkbox-label\">\n                                  <input\n                                    type=\"radio\"\n                                    value={radioValue}\n                                    id={radioArrayId2[i]}\n                                    checked={\n                                      this.state.radio1 === `${radioValue}`\n                                    }\n                                    onChange={this.radioChange.bind(this)}\n                                  />\n                                  <p className=\"radio-label\">\n                                    {radioLabels2[i]}\n                                  </p>\n                                  <span className=\"checkbox-custom circular\"></span>\n                                </label>\n                              </li>\n                            );\n                          })}\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                  <div\n                    css={css`\n                      padding: 0 15px;\n                      label {\n                        margin-bottom: 50px;\n                        p {\n                          position: relative;\n                          top: 4px;\n                          left: 50px;\n                        }\n\n                        @media only screen and (max-width: 767px) {\n                          p {\n                            line-height: 1.2rem;\n                            top: 8px;\n                          }\n                        }\n                      }\n                    `}\n                    className=\"row\"\n                  >\n                    <h2\n                      css={css`\n                        margin-bottom: 0 !important;\n                        margin-top: 50px;\n                      `}\n                    >\n                      Add ons:\n                    </h2>\n                  </div>\n                  <div\n                    css={css`\n                      padding: 0 15px;\n                      label {\n                        margin-bottom: 40px;\n                        p {\n                          position: relative;\n                          top: 4px;\n                          left: 50px;\n                        }\n\n                        @media only screen and (max-width: 767px) {\n                          p {\n                            line-height: 1.2rem;\n                            top: 8px;\n                          }\n                        }\n                      }\n                    `}\n                    className=\"row\"\n                  >\n                    <h3\n                      css={css`\n                        margin-top: 50px;\n                      `}\n                    >\n                      These add-ons can be added to your package:\n                    </h3>\n                    <div className=\"form-group\">\n                      <div>{outputCheckboxesAddOns3}</div>\n                      <br />\n                    </div>\n                  </div>\n                  <div\n                    css={css`\n                      padding: 0 15px;\n                    `}\n                    className=\"row\"\n                  >\n                    {grandTotalHST !== \"$0.00\" ? (\n                      <div>\n                        <h2\n                          css={css`\n                            margin-bottom: 30px !important;\n                          `}\n                        >\n                          Your plan:\n                        </h2>\n\n                        {this.state.radio1 > 0 ? (\n                          <div\n                            css={css`\n                              display: flex;\n                              justify-content: space-between;\n                              width: 400px;\n                              padding: 0 5px 0 0;\n\n                              input {\n                                font-family: \"Roboto\", sans-serif;\n                                font-size: 16px;\n                                font-weight: 600;\n                                margin-bottom: 15px;\n                                border: none;\n                                overflow: visible;\n                                width: auto;\n                              }\n\n                              @media only screen and (max-width: 500px) {\n                                width: 330px;\n\n                                input {\n                                  width: auto;\n                                }\n                              }\n\n                              @media only screen and (max-width: 390px) {\n                                width: 275px;\n                              }\n                            `}\n                          >\n                            <input\n                              type=\"text\"\n                              name=\"planType\"\n                              id=\"planType\"\n                              value={`+ ${this.state.radioLabel}`}\n                            />\n                            <span>{formatter.format(this.state.radio1)}</span>\n                          </div>\n                        ) : null}\n\n                        {addOnsLabels3.map((addOnLabel3, i) => {\n                          return (\n                            <div\n                              css={css`\n                                display: flex;\n                                justify-content: space-between;\n                                width: 400px;\n\n                                h3 {\n                                  font-size: 16px;\n                                  margin-bottom: 15px;\n                                }\n\n                                span {\n                                  font-size: 16px;\n                                }\n\n                                @media only screen and (max-width: 500px) {\n                                  width: 325px;\n                                }\n\n                                @media only screen and (max-width: 390px) {\n                                  width: 270px;\n                                }\n                              `}\n                            >\n                              <h3>+ {addOnLabel3}</h3>\n                              <span> {formatter.format(addOnsCost3[i])}</span>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    ) : null}\n                  </div>\n\n                  {grandTotalHST !== \"$0.00\" ? (\n                    <React.Fragment>\n                      <div\n                        css={css`\n                          padding: 0 15px;\n                        `}\n                        className=\"row\"\n                      >\n                        <div\n                          css={css`\n                            display: flex;\n                            justify-content: space-between;\n                            width: 400px;\n                            margin-top: 25px;\n                            padding-top: 25px;\n                            border-top: 1px solid black;\n\n                            h3 {\n                              font-size: 16px;\n                              margin-bottom: 15px;\n                            }\n\n                            span {\n                              font-size: 16px;\n                            }\n\n                            @media only screen and (max-width: 500px) {\n                              width: 325px;\n                            }\n\n                            @media only screen and (max-width: 390px) {\n                              width: 270px;\n                            }\n                          `}\n                        >\n                          <h3>+ HST (x0.13)</h3>\n                          <span>{grandTotalHST}</span>\n                        </div>\n                      </div>\n\n                      <div\n                        css={css`\n                          padding: 0 15px;\n                        `}\n                        className=\"row\"\n                      >\n                        <div\n                          css={css`\n                            display: flex;\n                            justify-content: space-between;\n                            width: 400px;\n\n                            h3 {\n                              font-size: 16px;\n                              margin-top: 7px;\n                              margin-bottom: 75px;\n                            }\n\n                            input {\n                              font-size: 16px;\n                              width: auto;\n                              overflow: visible;\n                              height: 35px;\n                              text-align: right;\n                              border: none;\n                              margin-bottom: 75px;\n                            }\n\n                            @media only screen and (max-width: 500px) {\n                              width: 330px;\n                            }\n\n                            @media only screen and (max-width: 390px) {\n                              width: 270px;\n                            }\n                          `}\n                        >\n                          <h3>Grand total:</h3>\n                          <input\n                            type=\"text\"\n                            name=\"grandTotal\"\n                            id=\"grandTotal\"\n                            value={grandTotalSumHST}\n                          />\n                        </div>\n                      </div>\n                    </React.Fragment>\n                  ) : null}\n                  <button className=\"btn btn-default\" type=\"submit\">\n                    submit\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </section>\n        <CallToAction\n          callTitle=\"You're one step away from a clean and happy home!\"\n          callText=\"If you'd like to know more about the services we offer, please view our Services page by clicking the button below.\"\n          callLinkUrl=\"/services\"\n          callLink=\"View our services\"\n          callImage=\"img/services-bg.jpg\"\n        />\n      </Layout>\n    );\n  }\n}\n\nexport default Services;\n"]},"metadata":{},"sourceType":"module"}