{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Checkbox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Checkbox, _React$Component);\n\n  function Checkbox() {\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Checkbox).call(this));\n    _this.state = {\n      isChecked: true,\n      value: \"1000\"\n    };\n    _this.handleChecked = _this.handleChecked.bind(_assertThisInitialized(_this)); // set this, because you need get methods from CheckBox\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"handleChecked\",\n    value: function handleChecked(event) {\n      this.setState({\n        isChecked: !this.state.isChecked,\n        value: this.state.isChecked === false ? \"0\" : this.state.isChecked === true ? \"1000\" : null\n      });\n      console.log(this.state.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var txt;\n\n      if (this.state.isChecked) {\n        txt = \"checked\";\n      } else {\n        txt = \"unchecked\";\n      }\n\n      return __jsx(\"div\", null, __jsx(\"label\", null, \"CheckBox 1\"), __jsx(\"input\", {\n        type: \"checkbox\",\n        onChange: this.handleChecked,\n        value: this.state.isChecked ? \"1000\" : \"0\"\n      }), __jsx(\"p\", null, \"This box is \", txt), __jsx(\"p\", null, \"value:\"));\n    }\n  }]);\n\n  return Checkbox;\n}(React.Component);\n\nexport default Checkbox;","map":{"version":3,"sources":["/Users/nickmakuch/Documents/Code/rosies-ms-nextjs/components/CheckBox.js"],"names":["Checkbox","state","isChecked","value","handleChecked","bind","event","setState","console","log","txt","React","Component"],"mappings":";;;;;;;;;IAAMA,Q;;;;;AACJ,sBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE,IAAb;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAAb;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB,CAHY,CAGwC;;AAHxC;AAIb;;;;kCAEaC,K,EAAO;AACnB,WAAKC,QAAL,CAAc;AACZL,QAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC,SADX;AAEZC,QAAAA,KAAK,EACH,KAAKF,KAAL,CAAWC,SAAX,KAAyB,KAAzB,GACI,GADJ,GAEI,KAAKD,KAAL,CAAWC,SAAX,KAAyB,IAAzB,GACA,MADA,GAEA;AAPM,OAAd;AASAM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWE,KAAvB;AACD;;;6BAEQ;AACP,UAAIO,GAAJ;;AACA,UAAI,KAAKT,KAAL,CAAWC,SAAf,EAA0B;AACxBQ,QAAAA,GAAG,GAAG,SAAN;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,GAAG,WAAN;AACD;;AACD,aACE,mBACE,kCADF,EAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,QAAQ,EAAE,KAAKN,aAFjB;AAGE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,SAAX,GAAuB,MAAvB,GAAgC;AAHzC,QAFF,EAOE,iCAAgBQ,GAAhB,CAPF,EASE,0BATF,CADF;AAaD;;;;EAxCoBC,KAAK,CAACC,S;;AA2C7B,eAAeZ,QAAf","sourcesContent":["class Checkbox extends React.Component {\n  constructor() {\n    super();\n    this.state = { isChecked: true, value: \"1000\" };\n    this.handleChecked = this.handleChecked.bind(this); // set this, because you need get methods from CheckBox\n  }\n\n  handleChecked(event) {\n    this.setState({\n      isChecked: !this.state.isChecked,\n      value:\n        this.state.isChecked === false\n          ? \"0\"\n          : this.state.isChecked === true\n          ? \"1000\"\n          : null\n    });\n    console.log(this.state.value);\n  }\n\n  render() {\n    var txt;\n    if (this.state.isChecked) {\n      txt = \"checked\";\n    } else {\n      txt = \"unchecked\";\n    }\n    return (\n      <div>\n        <label>CheckBox 1</label>\n        <input\n          type=\"checkbox\"\n          onChange={this.handleChecked}\n          value={this.state.isChecked ? \"1000\" : \"0\"}\n        />\n        <p>This box is {txt}</p>\n\n        <p>value:</p>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}