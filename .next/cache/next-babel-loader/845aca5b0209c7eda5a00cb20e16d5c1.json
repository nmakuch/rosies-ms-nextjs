{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Formik } from 'formik';\n\nconst Form = () => __jsx(\"div\", null, __jsx(\"h1\", null, \"Anywhere in your app!\"), __jsx(Formik, {\n  initialValues: {\n    email: '',\n    password: ''\n  },\n  validate: values => {\n    const errors = {};\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    return errors;\n  },\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(_JSON$stringify(values, null, 2));\n      setSubmitting(false);\n    }, 400);\n  }\n}, ({\n  values,\n  errors,\n  touched,\n  handleChange,\n  handleBlur,\n  handleSubmit,\n  isSubmitting\n  /* and other goodies */\n\n}) => __jsx(\"form\", {\n  onSubmit: handleSubmit\n}, __jsx(\"label\", null, \"email\"), __jsx(\"input\", {\n  type: \"email\",\n  name: \"email\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.email\n}), errors.email && touched.email && errors.email, __jsx(\"label\", null, \"password\"), __jsx(\"input\", {\n  type: \"password\",\n  name: \"password\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.password\n}), errors.password && touched.password && errors.password, __jsx(\"button\", {\n  type: \"submit\",\n  disabled: isSubmitting\n}, \"Submit\"))));\n\nexport default Form;","map":{"version":3,"sources":["/Users/nickmakuch/Documents/Code/rosies-ms-nextjs/components/Form.js"],"names":["React","Formik","Form","email","password","values","errors","test","setSubmitting","setTimeout","alert","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,IAAI,GAAG,MACX,mBACE,0CADF,EAEE,MAAC,MAAD;AACE,EAAA,aAAa,EAAE;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GADjB;AAEE,EAAA,QAAQ,EAAEC,MAAM,IAAI;AAClB,UAAMC,MAAM,GAAG,EAAf;;AACA,QAAI,CAACD,MAAM,CAACF,KAAZ,EAAmB;AACjBG,MAAAA,MAAM,CAACH,KAAP,GAAe,UAAf;AACD,KAFD,MAEO,IACL,CAAC,2CAA2CI,IAA3C,CAAgDF,MAAM,CAACF,KAAvD,CADI,EAEL;AACAG,MAAAA,MAAM,CAACH,KAAP,GAAe,uBAAf;AACD;;AACD,WAAOG,MAAP;AACD,GAZH;AAaE,EAAA,QAAQ,EAAE,CAACD,MAAD,EAAS;AAAEG,IAAAA;AAAF,GAAT,KAA+B;AACvCC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAAC,gBAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHS,EAGP,GAHO,CAAV;AAID;AAlBH,GAoBG,CAAC;AACAH,EAAAA,MADA;AAEAC,EAAAA,MAFA;AAGAK,EAAAA,OAHA;AAIAC,EAAAA,YAJA;AAKAC,EAAAA,UALA;AAMAC,EAAAA,YANA;AAOAC,EAAAA;AACA;;AARA,CAAD,KAUC;AAAM,EAAA,QAAQ,EAAED;AAAhB,GACE,6BADF,EAEE;AACE,EAAA,IAAI,EAAC,OADP;AAEE,EAAA,IAAI,EAAC,OAFP;AAGE,EAAA,QAAQ,EAAEF,YAHZ;AAIE,EAAA,MAAM,EAAEC,UAJV;AAKE,EAAA,KAAK,EAAER,MAAM,CAACF;AALhB,EAFF,EASGG,MAAM,CAACH,KAAP,IAAgBQ,OAAO,CAACR,KAAxB,IAAiCG,MAAM,CAACH,KAT3C,EAUE,gCAVF,EAWE;AACE,EAAA,IAAI,EAAC,UADP;AAEE,EAAA,IAAI,EAAC,UAFP;AAGE,EAAA,QAAQ,EAAES,YAHZ;AAIE,EAAA,MAAM,EAAEC,UAJV;AAKE,EAAA,KAAK,EAAER,MAAM,CAACD;AALhB,EAXF,EAkBGE,MAAM,CAACF,QAAP,IAAmBO,OAAO,CAACP,QAA3B,IAAuCE,MAAM,CAACF,QAlBjD,EAmBE;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAsB,EAAA,QAAQ,EAAEW;AAAhC,YAnBF,CA9BJ,CAFF,CADF;;AA6DA,eAAeb,IAAf","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\n\nconst Form = () => (\n  <div>\n    <h1>Anywhere in your app!</h1>\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validate={values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        /* and other goodies */\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <label>email</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.email}\n          />\n          {errors.email && touched.email && errors.email}\n          <label>password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.password}\n          />\n          {errors.password && touched.password && errors.password}\n          <button type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </button>\n        </form>\n      )}\n    </Formik>\n  </div>\n);\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}