{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n            padding-top: 100px !important;\\n            padding-bottom: 100px !important;\\n            h2 {\\n              text-transform: uppercase;\\n              font-weight: 600;\\n            }\\n\\n            h2:first-of-type {\\n              margin-bottom: 25px;\\n            }\\n\\n            h2:last-of-type {\\n              margin-bottom: 25px;\\n            }\\n          \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// this comment tells babel to convert jsx to calls to a function called jsx instead of React.createElement\n\n/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport GlobalHeader from \"../components/GlobalHeader\";\nimport CallToAction from \"../components/CallToAction\";\nimport Checkbox from \"../components/CheckBox\";\n\nvar CheckBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CheckBox, _React$Component);\n\n  function CheckBox() {\n    _classCallCheck(this, CheckBox);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CheckBox).apply(this, arguments));\n  }\n\n  _createClass(CheckBox, [{\n    key: \"render\",\n    value: function render() {\n      return jsx(\"input\", {\n        type: \"checkbox\",\n        id: this.props.id,\n        value: this.props.value,\n        onChange: this.props.onChange\n      });\n    }\n  }]);\n\n  return CheckBox;\n}(React.Component);\n\nvar Services =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Services, _React$Component2);\n\n  function Services(props) {\n    var _this;\n\n    _classCallCheck(this, Services);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Services).call(this, props));\n    _this.state = {\n      optionsChecked: []\n    };\n    return _this;\n  }\n\n  _createClass(Services, [{\n    key: \"changeEvent\",\n    value: function changeEvent(event) {\n      var checkedArray = this.state.optionsChecked;\n      var selectedValue = event.target.value;\n\n      if (event.target.checked === true) {\n        checkedArray.push(selectedValue);\n        this.setState({\n          optionsChecked: checkedArray\n        });\n      } else {\n        var valueIndex = checkedArray.indexOf(selectedValue);\n        checkedArray.splice(valueIndex, 1);\n        this.setState({\n          optionsChecked: checkedArray\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var checkBoxArray = [1, 2, 3];\n      var outputCheckboxes = checkBoxArray.map(function (string, i) {\n        return jsx(\"div\", null, jsx(CheckBox, {\n          value: string,\n          id: 'string_' + i,\n          onChange: this.changeEvent.bind(this)\n        }), jsx(\"label\", {\n          htmlFor: 'string_' + i\n        }, string));\n      }, this);\n      return jsx(Layout, null, jsx(GlobalHeader, {\n        globalHeaderTitle: \"Services / Booking\",\n        globalHeaderSubTitle: \"View a list of our services or book an appointment\",\n        globalHeaderImage: \"../img/services-bg.jpg\"\n      }), jsx(\"section\", {\n        css: css(_templateObject()),\n        id: \"contact-form\"\n      }, jsx(\"div\", {\n        className: \"container\"\n      }, jsx(\"div\", {\n        className: \"row\"\n      }, jsx(\"div\", null, jsx(\"div\", null, outputCheckboxes), jsx(\"div\", null, arraySum(_JSON$stringify(this.state.optionsChecked))))))), jsx(CallToAction, {\n        callTitle: \"You're one step away from a clean and happy home!\",\n        callText: \"If you'd like to know more about the services we offer, please view our Services page by clicking the button below.\",\n        callLinkUrl: \"/services\",\n        callLink: \"View our services\",\n        callImage: \"img/services-bg.jpg\"\n      }));\n    }\n  }]);\n\n  return Services;\n}(React.Component);\n\nexport default Services;","map":{"version":3,"sources":["/Users/nickmakuch/Documents/Code/rosies-ms-nextjs/pages/services.js"],"names":["jsx","css","Link","Layout","GlobalHeader","CallToAction","Checkbox","CheckBox","props","id","value","onChange","React","Component","Services","state","optionsChecked","event","checkedArray","selectedValue","target","checked","push","setState","valueIndex","indexOf","splice","checkBoxArray","outputCheckboxes","map","string","i","changeEvent","bind","arraySum"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA,SAASA,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;IAEMC,Q;;;;;;;;;;;;;6BACK;AACP,aACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC,EAFjB;AAGE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG;AAJvB,QADF;AAQD;;;;EAVoBC,KAAK,CAACC,S;;IAavBC,Q;;;;;AACJ,oBAAYN,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKO,KAAL,GAAa;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KAAb;AAFiB;AAGlB;;;;gCAEWC,K,EAAO;AACjB,UAAIC,YAAY,GAAG,KAAKH,KAAL,CAAWC,cAA9B;AACA,UAAIG,aAAa,GAAGF,KAAK,CAACG,MAAN,CAAaV,KAAjC;;AAEA,UAAIO,KAAK,CAACG,MAAN,CAAaC,OAAb,KAAyB,IAA7B,EAAmC;AACjCH,QAAAA,YAAY,CAACI,IAAb,CAAkBH,aAAlB;AACA,aAAKI,QAAL,CAAc;AACZP,UAAAA,cAAc,EAAEE;AADJ,SAAd;AAGD,OALD,MAKO;AACL,YAAIM,UAAU,GAAGN,YAAY,CAACO,OAAb,CAAqBN,aAArB,CAAjB;AACAD,QAAAA,YAAY,CAACQ,MAAb,CAAoBF,UAApB,EAAgC,CAAhC;AAEA,aAAKD,QAAL,CAAc;AACZP,UAAAA,cAAc,EAAEE;AADJ,SAAd;AAGD;AACF;;;6BACQ;AAEP,UAAIS,aAAa,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAApB;AAEA,UAAIC,gBAAgB,GAAGD,aAAa,CAACE,GAAd,CAAkB,UAASC,MAAT,EAAiBC,CAAjB,EAAmB;AAC1D,eAAQ,iBAAK,IAAC,QAAD;AAAU,UAAA,KAAK,EAAED,MAAjB;AAAyB,UAAA,EAAE,EAAE,YAAYC,CAAzC;AAA4C,UAAA,QAAQ,EAAE,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB;AAAtD,UAAL,EAA0F;AAAO,UAAA,OAAO,EAAE,YAAYF;AAA5B,WAAgCD,MAAhC,CAA1F,CAAR;AACD,OAFsB,EAEpB,IAFoB,CAAvB;AAIA,aACE,IAAC,MAAD,QACE,IAAC,YAAD;AACE,QAAA,iBAAiB,EAAC,oBADpB;AAEE,QAAA,oBAAoB,EAAC,oDAFvB;AAGE,QAAA,iBAAiB,EAAC;AAHpB,QADF,EAME;AACE,QAAA,GAAG,EAAE7B,GAAF,mBADL;AAiBE,QAAA,EAAE,EAAC;AAjBL,SAmBE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,iBACE,iBAAM2B,gBAAN,CADF,EAEE,iBAAMM,QAAQ,CAAC,gBAAe,KAAKnB,KAAL,CAAWC,cAA1B,CAAD,CAAd,CAFF,CADF,CADF,CAnBF,CANF,EAkCE,IAAC,YAAD;AACE,QAAA,SAAS,EAAC,mDADZ;AAEE,QAAA,QAAQ,EAAC,qHAFX;AAGE,QAAA,WAAW,EAAC,WAHd;AAIE,QAAA,QAAQ,EAAC,mBAJX;AAKE,QAAA,SAAS,EAAC;AALZ,QAlCF,CADF;AA4CD;;;;EA5EoBJ,KAAK,CAACC,S;;AA+E7B,eAAeC,QAAf","sourcesContent":["// this comment tells babel to convert jsx to calls to a function called jsx instead of React.createElement\n/** @jsx jsx */\n\nimport { jsx, css } from \"@emotion/core\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport GlobalHeader from \"../components/GlobalHeader\";\nimport CallToAction from \"../components/CallToAction\";\nimport Checkbox from \"../components/CheckBox\";\n\nclass CheckBox extends React.Component {\n  render() {\n    return (\n      <input\n        type=\"checkbox\"\n        id={this.props.id}\n        value={this.props.value}\n        onChange={this.props.onChange}\n      />\n    );\n  }\n}\n\nclass Services extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { optionsChecked: [] };\n  }\n\n  changeEvent(event) {\n    let checkedArray = this.state.optionsChecked;\n    let selectedValue = event.target.value;\n\n    if (event.target.checked === true) {\n      checkedArray.push(selectedValue);\n      this.setState({\n        optionsChecked: checkedArray\n      });\n    } else {\n      let valueIndex = checkedArray.indexOf(selectedValue);\n      checkedArray.splice(valueIndex, 1);\n\n      this.setState({\n        optionsChecked: checkedArray\n      });\n    }\n  }\n  render() {\n\n    let checkBoxArray = [1,2,3];\n       \n    let outputCheckboxes = checkBoxArray.map(function(string, i){\n      return (<div><CheckBox value={string} id={'string_' + i} onChange={this.changeEvent.bind(this)} /><label htmlFor={'string_' + i}>{string}</label></div>)\n    }, this);\n\n    return (\n      <Layout>\n        <GlobalHeader\n          globalHeaderTitle=\"Services / Booking\"\n          globalHeaderSubTitle=\"View a list of our services or book an appointment\"\n          globalHeaderImage=\"../img/services-bg.jpg\"\n        />\n        <section\n          css={css`\n            padding-top: 100px !important;\n            padding-bottom: 100px !important;\n            h2 {\n              text-transform: uppercase;\n              font-weight: 600;\n            }\n\n            h2:first-of-type {\n              margin-bottom: 25px;\n            }\n\n            h2:last-of-type {\n              margin-bottom: 25px;\n            }\n          `}\n          id=\"contact-form\"\n        >\n          <div className=\"container\">\n            <div className=\"row\">\n              <div>\n                <div>{outputCheckboxes}</div>\n                <div>{arraySum(JSON.stringify(this.state.optionsChecked))}</div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <CallToAction\n          callTitle=\"You're one step away from a clean and happy home!\"\n          callText=\"If you'd like to know more about the services we offer, please view our Services page by clicking the button below.\"\n          callLinkUrl=\"/services\"\n          callLink=\"View our services\"\n          callImage=\"img/services-bg.jpg\"\n        />\n      </Layout>\n    );\n  }\n}\n\nexport default Services;\n"]},"metadata":{},"sourceType":"module"}